{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/anthonygonzalez/development/tests/nextjs-socketio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/anthonygonzalez/development/tests/nextjs-socketio/pages/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // import \"./ChatRoom.css\";\n\nimport useChat from \"../hooks/useChat.js\";\n\nvar ChatRoom = function ChatRoom(props) {\n  _s();\n\n  //   const { roomId } = props.match.params;\n  var _useChat = useChat(),\n      messages = _useChat.messages,\n      sendMessage = _useChat.sendMessage;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      newMessage = _React$useState2[0],\n      setNewMessage = _React$useState2[1];\n\n  var handleNewMessageChange = function handleNewMessageChange(event) {\n    setNewMessage(event.target.value);\n  };\n\n  var handleSendMessage = function handleSendMessage() {\n    sendMessage(newMessage);\n    setNewMessage(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"messages-list\",\n        children: messages.map(function (message, i) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"message-item \".concat(message.ownedByCurrentUser ? \"my-message\" : \"received-message\"),\n            children: message.value\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: newMessage,\n      onChange: handleNewMessageChange,\n      placeholder: \"Write message...\",\n      className: \"new-message-input-field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      className: \"send-message-button\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ChatRoom, \"WTagyWyP35MlJQyubzPp0SyX1eo=\", false, function () {\n  return [useChat];\n});\n\n_c = ChatRoom;\nexport default ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["/Users/anthonygonzalez/development/tests/nextjs-socketio/pages/index.js"],"names":["React","useChat","ChatRoom","props","messages","sendMessage","useState","newMessage","setNewMessage","handleNewMessageChange","event","target","value","handleSendMessage","map","message","i","ownedByCurrentUser"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA;;AAC5B;AAD4B,iBAEQF,OAAO,EAFf;AAAA,MAElBG,QAFkB,YAElBA,QAFkB;AAAA,MAERC,WAFQ,YAERA,WAFQ;;AAAA,wBAGUL,KAAK,CAACM,QAAN,CAAe,EAAf,CAHV;AAAA;AAAA,MAGnBC,UAHmB;AAAA,MAGPC,aAHO;;AAK1B,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,KAAD,EAAW;AACxCF,IAAAA,aAAa,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACD,GAFD;;AAIA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BR,IAAAA,WAAW,CAACE,UAAD,CAAX;AACAC,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BAEE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,kBACGJ,QAAQ,CAACU,GAAT,CAAa,UAACC,OAAD,EAAUC,CAAV;AAAA,8BACZ;AAEE,YAAA,SAAS,yBACPD,OAAO,CAACE,kBAAR,GAA6B,YAA7B,GAA4C,kBADrC,CAFX;AAAA,sBAMGF,OAAO,CAACH;AANX,aACOI,CADP;AAAA;AAAA;AAAA;AAAA,mBADY;AAAA,SAAb;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAFF,eAgBE;AACE,MAAA,KAAK,EAAET,UADT;AAEE,MAAA,QAAQ,EAAEE,sBAFZ;AAGE,MAAA,WAAW,EAAC,kBAHd;AAIE,MAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,aAhBF,eAsBE;AAAQ,MAAA,OAAO,EAAEI,iBAAjB;AAAoC,MAAA,SAAS,EAAC,qBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA4BD,CA1CD;;GAAMX,Q;UAE8BD,O;;;KAF9BC,Q;AA4CN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\n\n// import \"./ChatRoom.css\";\nimport useChat from \"../hooks/useChat.js\";\n\nconst ChatRoom = (props) => {\n//   const { roomId } = props.match.params;\n  const { messages, sendMessage } = useChat();\n  const [newMessage, setNewMessage] = React.useState(\"\");\n\n  const handleNewMessageChange = (event) => {\n    setNewMessage(event.target.value);\n  };\n\n  const handleSendMessage = () => {\n    sendMessage(newMessage);\n    setNewMessage(\"\");\n  };\n\n  return (\n    <div className=\"chat-room-container\">\n      {/* <h1 className=\"room-name\">Room: {roomId}</h1> */}\n      <div className=\"messages-container\">\n        <ol className=\"messages-list\">\n          {messages.map((message, i) => (\n            <li\n              key={i}\n              className={`message-item ${\n                message.ownedByCurrentUser ? \"my-message\" : \"received-message\"\n              }`}\n            >\n              {message.value}\n            </li>\n          ))}\n        </ol>\n      </div>\n      <textarea\n        value={newMessage}\n        onChange={handleNewMessageChange}\n        placeholder=\"Write message...\"\n        className=\"new-message-input-field\"\n      />\n      <button onClick={handleSendMessage} className=\"send-message-button\">\n        Send\n      </button>\n    </div>\n  );\n};\n\nexport default ChatRoom;\n"]},"metadata":{},"sourceType":"module"}