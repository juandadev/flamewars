{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/anthonygonzalez/development/tests/nextjs-socketio/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport useChat from '../hooks/useChat.js';\nvar ENDPOINT = 'http://localhost:3000';\nexport var __N_SSG = true;\nexport default function Homepage(_ref) {\n  _s();\n\n  var _this = this;\n\n  var servicesMessages = _ref.servicesMessages;\n\n  var _useState = useState(''),\n      field = _useState[0],\n      setField = _useState[1];\n\n  var _useState2 = useState([]),\n      localMessages = _useState2[0],\n      setLocalMessages = _useState2[1];\n\n  var socket = socketIOClient(ENDPOINT);\n\n  var _useState3 = useState(false),\n      sendit = _useState3[0],\n      setsendit = _useState3[1];\n\n  var _useChat = useChat(),\n      messages = _useChat.messages,\n      sendMessage = _useChat.sendMessage; // useEffect(() => {\n  // console.log('messages from props =>', messages);\n  // setLocalMessages(messages)\n  // socket.on(\"message\", handleMessage);\n  // console.log(messages);\n  // }, [])\n  // let handleMessage = msg => {\n  // console.log('handleMessage =>', msg);\n  // let currentmsg = localMessages.concat(msg)\n  // setLocalMessages(currentmsg)\n  // messages.concat(msg)\n  // }\n\n\n  var handleChange = function handleChange(e) {\n    setField(e.target.value);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault(); // let msg = {\n    //     id: new Date().getTime(),\n    //     value: field\n    // }\n    // socket.emit('message', msg)\n    // // let currentmsg = localMessages.concat(msg)\n    // // setLocalMessages(currentmsg)\n    // setField('')\n    // setsendit(!sendit)\n\n    sendMessage(field);\n    setField('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [servicesMessages ? servicesMessages.map(function (message) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: message.value\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 24\n      }, _this);\n    }) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        type: \"text\",\n        placeholder: \"Escribe algo\",\n        value: field\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Homepage, \"lXaYJgW4+ULX4uum57g8x8/qyPQ=\", false, function () {\n  return [useChat];\n});\n\n_c = Homepage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"sources":["/Users/anthonygonzalez/development/tests/nextjs-socketio/pages/index.js"],"names":["React","useEffect","useState","socketIOClient","useChat","ENDPOINT","Homepage","servicesMessages","field","setField","localMessages","setLocalMessages","socket","sendit","setsendit","messages","sendMessage","handleChange","e","target","value","handleSubmit","preventDefault","map","message","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,IAAMC,QAAQ,GAAG,uBAAjB;;AAGA,eAAe,SAASC,QAAT,OAAsC;AAAA;;AAAA;;AAAA,MAAnBC,gBAAmB,QAAnBA,gBAAmB;;AAAA,kBACvBL,QAAQ,CAAC,EAAD,CADe;AAAA,MAC1CM,KAD0C;AAAA,MACnCC,QADmC;;AAAA,mBAEPP,QAAQ,CAAC,EAAD,CAFD;AAAA,MAE1CQ,aAF0C;AAAA,MAE3BC,gBAF2B;;AAGjD,MAAMC,MAAM,GAAGT,cAAc,CAACE,QAAD,CAA7B;;AAHiD,mBAIrBH,QAAQ,CAAC,KAAD,CAJa;AAAA,MAI1CW,MAJ0C;AAAA,MAIlCC,SAJkC;;AAAA,iBAKfV,OAAO,EALQ;AAAA,MAKzCW,QALyC,YAKzCA,QALyC;AAAA,MAK/BC,WAL+B,YAK/BA,WAL+B,EAOjD;AACI;AACA;AACA;AACA;AACJ;AAEA;AACI;AACA;AACA;AACA;AACJ;;;AAEA,MAAIC,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC,EAAI;AACpBT,IAAAA,QAAQ,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAIA,MAAIC,YAAY,GAAI,SAAhBA,YAAgB,CAAAH,CAAC,EAAI;AACrBA,IAAAA,CAAC,CAACI,cAAF,GADqB,CAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAN,IAAAA,WAAW,CAACR,KAAD,CAAX;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAbD;;AAeA,sBACI;AAAA,eACKF,gBAAgB,GAAGA,gBAAgB,CAACgB,GAAjB,CAAqB,UAAAC,OAAO,EAAI;AAChD,0BAAO;AAAA,kBAAsBA,OAAO,CAACJ;AAA9B,SAASI,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA,eAAP;AACH,KAFmB,CAAH,GAEb,IAHR,eAII;AAAM,MAAA,QAAQ,EAAEJ,YAAhB;AAAA,8BACI;AACI,QAAA,QAAQ,EAAEJ,YADd;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,WAAW,EAAC,cAHhB;AAII,QAAA,KAAK,EAAET;AAJX;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAxDuBF,Q;UAKcF,O;;;KALdE,Q","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport socketIOClient from \"socket.io-client\";\nimport useChat from '../hooks/useChat.js'\nconst ENDPOINT = 'http://localhost:3000';\n\n\nexport default function Homepage({servicesMessages}) {\n    const [field, setField] = useState('')\n    const [localMessages, setLocalMessages] = useState([])\n    const socket = socketIOClient(ENDPOINT);\n    const [sendit, setsendit] = useState(false)\n    const { messages, sendMessage } = useChat();\n    \n    // useEffect(() => {\n        // console.log('messages from props =>', messages);\n        // setLocalMessages(messages)\n        // socket.on(\"message\", handleMessage);\n        // console.log(messages);\n    // }, [])\n\n    // let handleMessage = msg => {\n        // console.log('handleMessage =>', msg);\n        // let currentmsg = localMessages.concat(msg)\n        // setLocalMessages(currentmsg)\n        // messages.concat(msg)\n    // }\n\n    let handleChange = e => {\n        setField(e.target.value)\n    }\n\n    let handleSubmit  = e => {\n        e.preventDefault()\n        // let msg = {\n        //     id: new Date().getTime(),\n        //     value: field\n        // }\n        // socket.emit('message', msg)\n        // // let currentmsg = localMessages.concat(msg)\n        // // setLocalMessages(currentmsg)\n        // setField('')\n        // setsendit(!sendit)\n        sendMessage(field);\n        setField('')\n    }\n\n    return (\n        <div>\n            {servicesMessages ? servicesMessages.map(message => {\n                return <li key={message.id}>{message.value}</li>\n            }): null}\n            <form onSubmit={handleSubmit}>\n                <input\n                    onChange={handleChange}\n                    type='text'\n                    placeholder='Escribe algo'\n                    value={field}\n                />\n                <button>Enviar</button>\n            </form>\n        </div>\n    )\n}\n\nexport async function getStaticProps(context) {\n    let res = await fetch('http://localhost:3000/messages')\n    let servicesMessages = await res.json()\n\n    return {\n      props: { servicesMessages }, // will be passed to the page component as props\n    }\n}\n"]},"metadata":{},"sourceType":"module"}