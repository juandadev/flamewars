{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/anthonygonzalez/development/tests/nextjs-socketio/pages/index.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = 'http://localhost:3000';\nexport default function Homepage({\n  messages\n}) {\n  const {\n    0: localMessages,\n    1: setLocalMessages\n  } = useState([]);\n  const {\n    0: field,\n    1: setField\n  } = useState('');\n  const socket = socketIOClient(ENDPOINT);\n  const {\n    0: sendit,\n    1: setsendit\n  } = useState(false);\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = socket;\n    socketRef.current.on(\"message\", handleMessage);\n    setLocalMessages(messages);\n  }, []);\n\n  let handleMessage = msg => {\n    setLocalMessages(oldMessages => [...oldMessages, msg]);\n  };\n\n  let handleChange = e => {\n    setField(e.target.value);\n  };\n\n  let handleSubmit = e => {\n    e.preventDefault();\n    let msg = {\n      id: new Date().getTime(),\n      value: field,\n      sender: socket.id\n    };\n    socketRef.current.emit('message', msg);\n    setField(''); // setsendit(!sendit)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [localMessages ? localMessages.map(message => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: message.value\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 24\n      }, this);\n    }) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        type: \"text\",\n        placeholder: \"Escribe algo\",\n        value: field\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\nexport async function getStaticProps(context) {\n  let res = await fetch('http://localhost:3000/messages');\n  let messages = await res.json();\n  return {\n    props: {\n      messages\n    } // will be passed to the page component as props\n\n  };\n}","map":{"version":3,"sources":["/Users/anthonygonzalez/development/tests/nextjs-socketio/pages/index.js"],"names":["React","useEffect","useState","useRef","socketIOClient","ENDPOINT","Homepage","messages","localMessages","setLocalMessages","field","setField","socket","sendit","setsendit","socketRef","current","on","handleMessage","msg","oldMessages","handleChange","e","target","value","handleSubmit","preventDefault","id","Date","getTime","sender","emit","map","message","getStaticProps","context","res","fetch","json","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,MAAMC,QAAQ,GAAG,uBAAjB;AAGA,eAAe,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA8B;AACzC,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCP,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM;AAAA,OAACQ,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMU,MAAM,GAAGR,cAAc,CAACC,QAAD,CAA7B;AACA,QAAM;AAAA,OAACQ,MAAD;AAAA,OAASC;AAAT,MAAsBZ,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMa,SAAS,GAAGZ,MAAM,EAAxB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,SAAS,CAACC,OAAV,GAAoBJ,MAApB;AACAG,IAAAA,SAAS,CAACC,OAAV,CAAkBC,EAAlB,CAAqB,SAArB,EAAgCC,aAAhC;AACAT,IAAAA,gBAAgB,CAACF,QAAD,CAAhB;AACH,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAIW,aAAa,GAAGC,GAAG,IAAI;AACvBV,IAAAA,gBAAgB,CAACW,WAAW,IAAI,CAAC,GAAGA,WAAJ,EAAiBD,GAAjB,CAAhB,CAAhB;AACH,GAFD;;AAIA,MAAIE,YAAY,GAAGC,CAAC,IAAI;AACpBX,IAAAA,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAIA,MAAIC,YAAY,GAAIH,CAAC,IAAI;AACrBA,IAAAA,CAAC,CAACI,cAAF;AACA,QAAIP,GAAG,GAAG;AACNQ,MAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EADE;AAENL,MAAAA,KAAK,EAAEd,KAFD;AAGNoB,MAAAA,MAAM,EAAElB,MAAM,CAACe;AAHT,KAAV;AAKAZ,IAAAA,SAAS,CAACC,OAAV,CAAkBe,IAAlB,CAAuB,SAAvB,EAAkCZ,GAAlC;AACAR,IAAAA,QAAQ,CAAC,EAAD,CAAR,CARqB,CASrB;AACH,GAVD;;AAYA,sBACI;AAAA,eACKH,aAAa,GAAGA,aAAa,CAACwB,GAAd,CAAkBC,OAAO,IAAI;AAC1C,0BAAO;AAAA,kBAAsBA,OAAO,CAACT;AAA9B,SAASS,OAAO,CAACN,EAAjB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFgB,CAAH,GAEV,IAHR,eAII;AAAM,MAAA,QAAQ,EAAEF,YAAhB;AAAA,8BACI;AACI,QAAA,QAAQ,EAAEJ,YADd;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,WAAW,EAAC,cAHhB;AAII,QAAA,KAAK,EAAEX;AAJX;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;AAED,OAAO,eAAewB,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,MAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAD,CAArB;AACA,MAAI9B,QAAQ,GAAG,MAAM6B,GAAG,CAACE,IAAJ,EAArB;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AAAEhC,MAAAA;AAAF,KADF,CACgB;;AADhB,GAAP;AAGH","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = 'http://localhost:3000';\n\n\nexport default function Homepage({messages}) {\n    const [localMessages, setLocalMessages] = useState([])\n    const [field, setField] = useState('')\n    const socket = socketIOClient(ENDPOINT);\n    const [sendit, setsendit] = useState(false)\n    const socketRef = useRef();\n    \n    useEffect(() => {\n        socketRef.current = socket\n        socketRef.current.on(\"message\", handleMessage);\n        setLocalMessages(messages)\n    }, [])\n\n    let handleMessage = msg => {\n        setLocalMessages(oldMessages => [...oldMessages, msg])\n    }\n\n    let handleChange = e => {\n        setField(e.target.value)\n    }\n\n    let handleSubmit  = e => {\n        e.preventDefault()\n        let msg = {\n            id: new Date().getTime(),\n            value: field,\n            sender: socket.id\n        }\n        socketRef.current.emit('message', msg)\n        setField('')\n        // setsendit(!sendit)\n    }\n\n    return (\n        <div>\n            {localMessages ? localMessages.map(message => {\n                return <li key={message.id}>{message.value}</li>\n            }): null}\n            <form onSubmit={handleSubmit}>\n                <input\n                    onChange={handleChange}\n                    type='text'\n                    placeholder='Escribe algo'\n                    value={field}\n                />\n                <button>Enviar</button>\n            </form>\n        </div>\n    )\n}\n\nexport async function getStaticProps(context) {\n    let res = await fetch('http://localhost:3000/messages')\n    let messages = await res.json()\n\n    return {\n      props: { messages }, // will be passed to the page component as props\n    }\n}\n"]},"metadata":{},"sourceType":"module"}