{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/anthonygonzalez/development/tests/nextjs-socketio/pages/index.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport io from \"socket.io-client\";\nconst ENDPOINT = 'http://localhost:3000';\nexport default function Homepage({\n  messages\n}) {\n  const socket = io(ENDPOINT);\n  const {\n    0: localMessages,\n    1: setLocalMessages\n  } = useState([]);\n  const {\n    0: field,\n    1: setField\n  } = useState('');\n  const {\n    0: user,\n    1: setUser\n  } = useState('');\n  useEffect(() => {\n    socket.on(\"message\", handleMessage);\n    setLocalMessages(messages);\n  }, []);\n\n  let handleMessage = msg => {\n    setLocalMessages(oldMessages => [...oldMessages, msg]);\n  };\n\n  let handleChange = e => {\n    setField(e.target.value);\n  };\n\n  let handleUsername = e => {\n    setUser(e.target.value);\n  };\n\n  let getVotingOpction = str => {\n    let rmCreate = str.replace('/create ', '');\n    let rmVs = rmCreate.replace(' vs', '');\n    let wordsArray = rmVs.split(/(\\s+)/);\n    let options = wordsArray.filter(word => word !== ' ');\n    return options;\n  };\n\n  let handleSubmit = e => {\n    e.preventDefault();\n    let msg = {\n      id: new Date().getTime(),\n      value: field,\n      user: user\n    };\n\n    if (field.includes('/create')) {\n      console.log('crear evento');\n      socket.emit('create', {\n        value: field\n      }); // /create taco vs milanesa\n\n      let options = getVotingOpction(field);\n      console.log(options);\n    } else if (field.includes('/close')) {\n      console.log('cerrando evento');\n    } else {\n      socket.emit('message', msg);\n      setField('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [localMessages ? localMessages.map(message => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [message.user, \" \", `=>`, \" \", message.value]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 24\n      }, this);\n    }) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        type: \"text\",\n        placeholder: \"Escribe algo\",\n        value: field\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleUsername,\n      type: \"text\",\n      placeholder: \"Escribe algo\",\n      value: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\nexport async function getStaticProps(context) {\n  let res = await fetch('http://localhost:3000/messages');\n  let messages = await res.json();\n  return {\n    props: {\n      messages\n    } // will be passed to the page component as props\n\n  };\n}","map":{"version":3,"sources":["/Users/anthonygonzalez/development/tests/nextjs-socketio/pages/index.js"],"names":["React","useEffect","useState","useRef","io","ENDPOINT","Homepage","messages","socket","localMessages","setLocalMessages","field","setField","user","setUser","on","handleMessage","msg","oldMessages","handleChange","e","target","value","handleUsername","getVotingOpction","str","rmCreate","replace","rmVs","wordsArray","split","options","filter","word","handleSubmit","preventDefault","id","Date","getTime","includes","console","log","emit","map","message","getStaticProps","context","res","fetch","json","props"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport io from \"socket.io-client\";\nconst ENDPOINT = 'http://localhost:3000';\n\n\nexport default function Homepage({messages}) {\n    const socket = io(ENDPOINT);\n    const [localMessages, setLocalMessages] = useState([])\n    const [field, setField] = useState('')\n    const [user, setUser] = useState('')\n\n    useEffect(() => {\n        \n        socket.on(\"message\", handleMessage);\n        setLocalMessages(messages)\n    }, [])\n\n    let handleMessage = msg => {\n        setLocalMessages(oldMessages => [...oldMessages, msg])\n    }\n\n    let handleChange = e => {\n        setField(e.target.value)\n    }\n\n    let handleUsername = e =>{\n        setUser(e.target.value)\n    }\n\n    let getVotingOpction = str => {\n        let rmCreate = str.replace('/create ', '')\n        let rmVs = rmCreate.replace(' vs', '')\n        let wordsArray = rmVs.split(/(\\s+)/);\n        let options = wordsArray.filter(word => word !== ' ')\n        return options\n    }\n\n    let handleSubmit  = e => {\n        e.preventDefault()\n        let msg = {\n            id: new Date().getTime(),\n            value: field,\n            user: user\n        }\n        if(field.includes('/create')) {\n            console.log('crear evento');\n            socket.emit('create', {value: field})\n\n            // /create taco vs milanesa\n            let options = getVotingOpction(field)\n            console.log(options);\n            \n        } else if(field.includes('/close')) {\n            console.log('cerrando evento');\n        } else {\n            socket.emit('message', msg)\n            setField('')\n        }\n    }\n\n    return (\n        <div>\n            {localMessages ? localMessages.map(message => {\n                return <li key={message.id}>{message.user} {`=>`} {message.value}</li>\n            }): null}\n            <form onSubmit={handleSubmit}>\n                <input\n                    onChange={handleChange}\n                    type='text'\n                    placeholder='Escribe algo'\n                    value={field}\n                />\n                <button>Enviar</button>\n            </form>\n\n            <input\n                onChange={handleUsername}\n                type='text'\n                placeholder='Escribe algo'\n                value={user}\n            />\n        </div>\n    )\n}\n\nexport async function getStaticProps(context) {\n    let res = await fetch('http://localhost:3000/messages')\n    let messages = await res.json()\n\n    return {\n      props: { messages }, // will be passed to the page component as props\n    }\n}\n"]},"metadata":{},"sourceType":"module"}