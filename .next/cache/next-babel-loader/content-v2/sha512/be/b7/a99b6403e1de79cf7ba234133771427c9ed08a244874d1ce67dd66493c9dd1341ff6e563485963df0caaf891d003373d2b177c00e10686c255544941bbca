{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/anthonygonzalez/development/tests/nextjs-socketio/pages/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport useChat from '../hooks/useChat.js';\nconst ENDPOINT = 'http://localhost:3000';\nexport default function Homepage({\n  servicesMessages\n}) {\n  const {\n    0: field,\n    1: setField\n  } = useState('');\n  const {\n    0: localMessages,\n    1: setLocalMessages\n  } = useState([]);\n  const socket = socketIOClient(ENDPOINT);\n  const {\n    0: sendit,\n    1: setsendit\n  } = useState(false);\n  const {\n    messages,\n    sendMessage\n  } = useChat(); // useEffect(() => {\n  // console.log('messages from props =>', messages);\n  // setLocalMessages(messages)\n  // socket.on(\"message\", handleMessage);\n  // console.log(messages);\n  // }, [])\n  // let handleMessage = msg => {\n  // console.log('handleMessage =>', msg);\n  // let currentmsg = localMessages.concat(msg)\n  // setLocalMessages(currentmsg)\n  // messages.concat(msg)\n  // }\n\n  let handleChange = e => {\n    setField(e.target.value);\n  };\n\n  let handleSubmit = e => {\n    e.preventDefault(); // let msg = {\n    //     id: new Date().getTime(),\n    //     value: field\n    // }\n    // socket.emit('message', msg)\n    // // let currentmsg = localMessages.concat(msg)\n    // // setLocalMessages(currentmsg)\n    // setField('')\n    // setsendit(!sendit)\n\n    sendMessage(field);\n    setField('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [servicesMessages ? servicesMessages.map(message => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: message.value\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 24\n      }, this);\n    }) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        type: \"text\",\n        placeholder: \"Escribe algo\",\n        value: field\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\nexport async function getStaticProps(context) {\n  let res = await fetch('http://localhost:3000/messages');\n  let servicesMessages = await res.json();\n  return {\n    props: {\n      servicesMessages\n    } // will be passed to the page component as props\n\n  };\n}","map":{"version":3,"sources":["/Users/anthonygonzalez/development/tests/nextjs-socketio/pages/index.js"],"names":["React","useEffect","useState","socketIOClient","useChat","ENDPOINT","Homepage","servicesMessages","field","setField","localMessages","setLocalMessages","socket","sendit","setsendit","messages","sendMessage","handleChange","e","target","value","handleSubmit","preventDefault","map","message","id","getStaticProps","context","res","fetch","json","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,MAAMC,QAAQ,GAAG,uBAAjB;AAGA,eAAe,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAAsC;AACjD,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACQ,aAAD;AAAA,OAAgBC;AAAhB,MAAoCT,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAMU,MAAM,GAAGT,cAAc,CAACE,QAAD,CAA7B;AACA,QAAM;AAAA,OAACQ,MAAD;AAAA,OAASC;AAAT,MAAsBZ,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAEa,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BZ,OAAO,EAAzC,CALiD,CAOjD;AACI;AACA;AACA;AACA;AACJ;AAEA;AACI;AACA;AACA;AACA;AACJ;;AAEA,MAAIa,YAAY,GAAGC,CAAC,IAAI;AACpBT,IAAAA,QAAQ,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAIA,MAAIC,YAAY,GAAIH,CAAC,IAAI;AACrBA,IAAAA,CAAC,CAACI,cAAF,GADqB,CAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAN,IAAAA,WAAW,CAACR,KAAD,CAAX;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAbD;;AAeA,sBACI;AAAA,eACKF,gBAAgB,GAAGA,gBAAgB,CAACgB,GAAjB,CAAqBC,OAAO,IAAI;AAChD,0BAAO;AAAA,kBAAsBA,OAAO,CAACJ;AAA9B,SAASI,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFmB,CAAH,GAEb,IAHR,eAII;AAAM,MAAA,QAAQ,EAAEJ,YAAhB;AAAA,8BACI;AACI,QAAA,QAAQ,EAAEJ,YADd;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,WAAW,EAAC,cAHhB;AAII,QAAA,KAAK,EAAET;AAJX;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;AAED,OAAO,eAAekB,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,MAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAD,CAArB;AACA,MAAItB,gBAAgB,GAAG,MAAMqB,GAAG,CAACE,IAAJ,EAA7B;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AAAExB,MAAAA;AAAF,KADF,CACwB;;AADxB,GAAP;AAGH","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport socketIOClient from \"socket.io-client\";\nimport useChat from '../hooks/useChat.js'\nconst ENDPOINT = 'http://localhost:3000';\n\n\nexport default function Homepage({servicesMessages}) {\n    const [field, setField] = useState('')\n    const [localMessages, setLocalMessages] = useState([])\n    const socket = socketIOClient(ENDPOINT);\n    const [sendit, setsendit] = useState(false)\n    const { messages, sendMessage } = useChat();\n    \n    // useEffect(() => {\n        // console.log('messages from props =>', messages);\n        // setLocalMessages(messages)\n        // socket.on(\"message\", handleMessage);\n        // console.log(messages);\n    // }, [])\n\n    // let handleMessage = msg => {\n        // console.log('handleMessage =>', msg);\n        // let currentmsg = localMessages.concat(msg)\n        // setLocalMessages(currentmsg)\n        // messages.concat(msg)\n    // }\n\n    let handleChange = e => {\n        setField(e.target.value)\n    }\n\n    let handleSubmit  = e => {\n        e.preventDefault()\n        // let msg = {\n        //     id: new Date().getTime(),\n        //     value: field\n        // }\n        // socket.emit('message', msg)\n        // // let currentmsg = localMessages.concat(msg)\n        // // setLocalMessages(currentmsg)\n        // setField('')\n        // setsendit(!sendit)\n        sendMessage(field);\n        setField('')\n    }\n\n    return (\n        <div>\n            {servicesMessages ? servicesMessages.map(message => {\n                return <li key={message.id}>{message.value}</li>\n            }): null}\n            <form onSubmit={handleSubmit}>\n                <input\n                    onChange={handleChange}\n                    type='text'\n                    placeholder='Escribe algo'\n                    value={field}\n                />\n                <button>Enviar</button>\n            </form>\n        </div>\n    )\n}\n\nexport async function getStaticProps(context) {\n    let res = await fetch('http://localhost:3000/messages')\n    let servicesMessages = await res.json()\n\n    return {\n      props: { servicesMessages }, // will be passed to the page component as props\n    }\n}\n"]},"metadata":{},"sourceType":"module"}