{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/anthonygonzalez/development/tests/nextjs-socketio/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport socketIOClient from \"socket.io-client\";\nvar ENDPOINT = 'http://localhost:3000';\nexport var __N_SSG = true;\nexport default function Homepage(_ref) {\n  _s();\n\n  var _this = this;\n\n  var messages = _ref.messages;\n\n  // const [messages, setMessages] = useState([])\n  var _useState = useState(''),\n      field = _useState[0],\n      setField = _useState[1];\n\n  var socket = socketIOClient(ENDPOINT);\n  useEffect(function () {\n    console.log('messages from props =>', messages);\n    socket.on(\"message\", handleMessage);\n  }, [field]);\n\n  var handleMessage = function handleMessage(msg) {\n    // setMessages(messages => [...messages, msg])\n    messages.concat(msg);\n  };\n\n  var handleChange = function handleChange(e) {\n    setField(e.target.value);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    var msg = {\n      id: new Date().getTime(),\n      value: field\n    };\n    socket.emit('message', msg); // setMessages(messages => [...messages, message])\n\n    messages.concat(msg);\n    setField('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [messages ? messages.map(function (message) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: message.value\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 24\n      }, _this);\n    }) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        type: \"text\",\n        placeholder: \"Escribe algo\",\n        value: field\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Homepage, \"T7Ii/Hr75ng80m3qG+7Q1G7lpIc=\");\n\n_c = Homepage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"sources":["/Users/anthonygonzalez/development/tests/nextjs-socketio/pages/index.js"],"names":["React","useEffect","useState","socketIOClient","ENDPOINT","Homepage","messages","field","setField","socket","console","log","on","handleMessage","msg","concat","handleChange","e","target","value","handleSubmit","preventDefault","id","Date","getTime","emit","map","message"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,IAAMC,QAAQ,GAAG,uBAAjB;;AAGA,eAAe,SAASC,QAAT,OAA8B;AAAA;;AAAA;;AAAA,MAAXC,QAAW,QAAXA,QAAW;;AACzC;AADyC,kBAEfJ,QAAQ,CAAC,EAAD,CAFO;AAAA,MAElCK,KAFkC;AAAA,MAE3BC,QAF2B;;AAGzC,MAAMC,MAAM,GAAGN,cAAc,CAACC,QAAD,CAA7B;AAGAH,EAAAA,SAAS,CAAC,YAAM;AACZS,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCL,QAAtC;AACAG,IAAAA,MAAM,CAACG,EAAP,CAAU,SAAV,EAAqBC,aAArB;AACH,GAHQ,EAGN,CAACN,KAAD,CAHM,CAAT;;AAKA,MAAIM,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,GAAG,EAAI;AACvB;AACAR,IAAAA,QAAQ,CAACS,MAAT,CAAgBD,GAAhB;AACH,GAHD;;AAKA,MAAIE,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC,EAAI;AACpBT,IAAAA,QAAQ,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAIA,MAAIC,YAAY,GAAI,SAAhBA,YAAgB,CAAAH,CAAC,EAAI;AACrBA,IAAAA,CAAC,CAACI,cAAF;AACA,QAAIP,GAAG,GAAG;AACNQ,MAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EADE;AAENL,MAAAA,KAAK,EAAEZ;AAFD,KAAV;AAKAE,IAAAA,MAAM,CAACgB,IAAP,CAAY,SAAZ,EAAuBX,GAAvB,EAPqB,CAQrB;;AACAR,IAAAA,QAAQ,CAACS,MAAT,CAAgBD,GAAhB;AACAN,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAXD;;AAaA,sBACI;AAAA,eACKF,QAAQ,GAAGA,QAAQ,CAACoB,GAAT,CAAa,UAAAC,OAAO,EAAI;AAChC,0BAAO;AAAA,kBAAsBA,OAAO,CAACR;AAA9B,SAASQ,OAAO,CAACL,EAAjB;AAAA;AAAA;AAAA;AAAA,eAAP;AACH,KAFW,CAAH,GAEL,IAHR,eAII;AAAM,MAAA,QAAQ,EAAEF,YAAhB;AAAA,8BACI;AACI,QAAA,QAAQ,EAAEJ,YADd;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,WAAW,EAAC,cAHhB;AAII,QAAA,KAAK,EAAET;AAJX;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAjDuBF,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = 'http://localhost:3000';\n\n\nexport default function Homepage({messages}) {\n    // const [messages, setMessages] = useState([])\n    const [field, setField] = useState('')\n    const socket = socketIOClient(ENDPOINT);\n    \n\n    useEffect(() => {\n        console.log('messages from props =>', messages);\n        socket.on(\"message\", handleMessage);\n    }, [field])\n\n    let handleMessage = msg => {\n        // setMessages(messages => [...messages, msg])\n        messages.concat(msg)\n    }\n\n    let handleChange = e => {\n        setField(e.target.value)\n    }\n\n    let handleSubmit  = e => {\n        e.preventDefault()\n        let msg = {\n            id: new Date().getTime(),\n            value: field\n        }\n\n        socket.emit('message', msg)\n        // setMessages(messages => [...messages, message])\n        messages.concat(msg)\n        setField('')\n    }\n\n    return (\n        <div>\n            {messages ? messages.map(message => {\n                return <li key={message.id}>{message.value}</li>\n            }): null}\n            <form onSubmit={handleSubmit}>\n                <input\n                    onChange={handleChange}\n                    type='text'\n                    placeholder='Escribe algo'\n                    value={field}\n                />\n                <button>Enviar</button>\n            </form>\n        </div>\n    )\n}\n\nexport async function getStaticProps(context) {\n    let res = await fetch('http://localhost:3000/messages')\n    let messages = await res.json()\n\n    return {\n      props: { messages }, // will be passed to the page component as props\n    }\n}\n"]},"metadata":{},"sourceType":"module"}